name: 04.Deck
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/profile/{id}/deck/list'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all deck of a profile that were not hidden'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "decks": [
                {
                    "id": 11,
                    "name": "dolores",
                    "is_hidden": 0,
                    "image_path": "public/storage/",
                    "#cards": 2
                },
                {
                    "id": 13,
                    "name": "beatae",
                    "is_hidden": 0,
                    "image_path": "public/storage/",
                    "#cards": 5
                }
            ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/profile/{id}/deck/edit'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all deck of a profile, even hidden'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "decks": [
                {
                    "id": 11,
                    "name": "dolores",
                    "is_hidden": 0,
                    "image_path": "public/storage/",
                    "#cards": 2
                },
                {
                    "id": 13,
                    "name": "beatae",
                    "is_hidden": 1,
                    "image_path": "public/storage/",
                    "#cards": 5
                }
            ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/profile/{id}/deck/create'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create & add deck to profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "deck":
                {
                    "id": 11,
                    "name": "dolores",
                    "is_hidden": 0,
                    "image_path": "public/storage/images/decks/202209300415safari-logo.png",
                    "#cards": 0
                },
             "profile":
                {
                    "id": 11,
                    "name": "Merry Weather",
                    "type": 2,
                    "image": "public/storage/images/profiles/202209260458sketch.jpg",
                }
              "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/deck/{deck_id}'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "decks": {
                     "id": 12,
                     "name": "ipsam",
                     "is_hidden": 0,
                     "image_path": "images/decks/202209261050imagefile.png",
                     "#cards": 0
             }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/edit'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "deck": {
                 "id": 14,
                 "name": "popapi",
                 "is_hidden": 0,
                 "image_path": "public/storage/images/decks/202209300521firefox-logo.png",
                 "#cards": 3
             },
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/hide'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Hide/Show deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "success": true,
             "deck": {
                 "id": 16,
                 "name": "est",
                 "is_hidden": true,
                 "image_path": null,
                 "#cards": 6
             }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/delete'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "msg": "Deck delete",
             "success": false
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/copy'
    metadata:
      groupName: 04.Deck
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Copy deck to other profile'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      profile_ids:
        name: profile_ids
        description: 'The profile that wanted to copy the deck to.'
        required: true
        example: et
        type: string
        custom: []
    cleanBodyParameters:
      profile_ids: et
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
