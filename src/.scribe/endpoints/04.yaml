name: 05.Card
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/deck/{deck_id}/card/list'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all card of a deck that were unhidden'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "cards": [
                 {
                     "card_id": 8,
                     "word": "voluptatem",
                     "image_path": null,
                     "audio_path": null,
                 }
             ],
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/deck/{deck_id}/card/edit'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show all card of a deck, even hidden'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "cards": [
                 {
                     "card_id": 8,
                     "word": "voluptatem",
                     "image_path": null,
                     "audio_path": null,
                 },
                 {
                     "card_id": 6,
                     "word": "rerum",
                     "image_path": null,
                     "audio_path": null,
                 }
             ],
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/card/create'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create & add card to deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      word:
        name: word
        description: string
        required: false
        example: delectus
        type: required
        custom: []
      image:
        name: image
        description: 'mimes:jpg,png,jpeg,gif,svg,webp'
        required: false
        example: quidem
        type: required
        custom: []
      audio:
        name: audio
        description: 'mime:mimes:mp3,mpga,wav,ogg'
        required: false
        example: dolore
        type: audio
        custom: []
    cleanBodyParameters:
      word: delectus
      image: quidem
      audio: dolore
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "card": {
                 "word": "Merry",
                 "is_global": false,
                 "image_path": "images/cards/202209230745login-register.jpg",
                 "audio_path": "audio/cards/202209230821audiofileMP3.mp3",
                 "updated_at": "2022-09-23T07:45:31.000000Z",
                 "created_at": "2022-09-23T07:45:31.000000Z",
                 "id": 22
             },
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/deck/{deck_id}/card/{card_id}'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a card'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
      card_id:
        name: card_id
        description: 'The ID of the card.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
      card_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "card": {
                 "id": 35,
                 "word": "MerryWaether",
                 "image_path": "images/cards/202209230745imagefilejpg.jpg",
                 "audio_path": "audio/cards/202209230821audiofileMP3.mp3"
             }
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/card/{card_id}/edit'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Edit a card'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
      card_id:
        name: card_id
        description: 'The ID of the card.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
      card_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      word:
        name: word
        description: ''
        required: false
        example: culpa
        type: string
        custom: []
      image:
        name: image
        description: 'mimes:jpg,png,jpeg,gif,svg,webp'
        required: false
        example: earum
        type: image
        custom: []
      audio:
        name: audio
        description: 'mime:mimes:mp3,mpga,wav,ogg'
        required: false
        example: eum
        type: audio
        custom: []
    cleanBodyParameters:
      word: culpa
      image: earum
      audio: eum
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "card": {
                 "id": 35,
                 "is_global": false,
                 "word": "MerryWaether",
                 "image_path": "images/cards/202209230745imagefilejpg.jpg",
                 "audio_path": "audio/cards/202209230821audiofileMP3.mp3"
             },
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/deck/{deck_id}/card/{card_id}/delete'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete card'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
      card_id:
        name: card_id
        description: 'The ID of the card.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
      card_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "msg": "Deck delete",
             "success": false
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/deck/{deck_id}/card/{card_id}/hide'
    metadata:
      groupName: 05.Card
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Hide card in a deck'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      deck_id:
        name: deck_id
        description: 'The ID of the deck.'
        required: true
        example: 1
        type: integer
        custom: []
      card_id:
        name: card_id
        description: 'The ID of the card.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      deck_id: 1
      card_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "hidden": true,
             "success": true
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
